<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharmIpc</name>
    </assembly>
    <members>
        <member name="M:tiesky.com.SharmIpcInternals.ReaderWriterHandler.GetMessageId">
            <summary>
            To get new Id this function must be used
            </summary>
            <returns></returns>
        </member>
        <member name="M:tiesky.com.SharmIpcInternals.ReaderWriterHandler.SendMessage(tiesky.com.SharmIpcInternals.eMsgType,System.UInt64,System.Byte[],System.UInt64)">
            <summary>
            Returns false if buffer threshold is reached
            </summary>
            <param name="msgType"></param>
            <param name="msgId"></param>
            <param name="msg"></param>
            <param name="responseMsgId"></param>
            <returns></returns>
        </member>
        <member name="M:tiesky.com.SharmIpcInternals.ReaderWriterHandler.InitReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:tiesky.com.SharmIpcInternals.SharedMemory.#ctor(System.String,tiesky.com.SharmIpc,System.Int64,System.Int32)">
            <summary>
            
            </summary>
            <param name="uniqueHandlerName">Can be name of APP, both syncronized processes must use the same name and it must be unique among the OS</param>
            /// <param name="SharmIPC">SharmIPC instance</param>
            <param name="bufferCapacity"></param>        
        </member>
        <member name="M:tiesky.com.SharmIpcInternals.SharedMemory.Dispose">
            <summary>
            Disposing
            </summary>
        </member>
        <member name="M:tiesky.com.SharmIpcInternals.BytesProcessing.Substring(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Substring int-dimensional byte arrays
            </summary>
            <param name="ar"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:tiesky.com.SharmIpcInternals.BytesProcessing.To_UInt32_BigEndian(System.Byte[])">
            <summary>
            From 4 bytes array which is in BigEndian order (highest byte first, lowest last) makes uint.
            If array not equal 4 bytes throws exception. (0 to 4.294.967.295)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:tiesky.com.SharmIpcInternals.BytesProcessing.To_4_bytes_array_BigEndian(System.Int32)">
            <summary>
            From Int32 to 4 bytes array with BigEndian order (highest byte first, lowest last).        
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:tiesky.com.SharmIpc">
            <summary>
            Inter-process communication handler. IPC for .NET
            https://github.com/hhblaze/SharmIPC or http://sharmipc.tiesky.com
            </summary>
        </member>
        <member name="F:tiesky.com.SharmIpc.AsyncRemoteCallHandler">
            <summary>
            If we don't want to answer in sync way via remoteCallHandler
            msgId and data, msgId must be returned back with AsyncAnswerOnRemoteCall
            </summary>
        </member>
        <member name="F:tiesky.com.SharmIpc.tmr">
            <summary>
            Removing timeout requests
            </summary>
        </member>
        <member name="F:tiesky.com.SharmIpc.ResponseCrate.mre">
            <summary>
            Not SLIM version must be used (it works faster for longer delay which RPCs are)
            </summary>
        </member>
        <member name="M:tiesky.com.SharmIpc.#ctor(System.String,System.Func{System.Byte[],System.Tuple{System.Boolean,System.Byte[]}},System.Int64,System.Int32,System.Action{System.String,System.Exception})">
            <summary>
            SharmIpc constructor
            </summary>
            <param name="uniqueHandlerName">Must be unique in OS scope (can be PID [ID of the process] + other identifications)</param>
            <param name="remoteCallHandler">Response routine for the remote partner requests</param>
            <param name="bufferCapacity">bigger buffer sends larger datablocks faster. Default value is 50000</param>
            <param name="maxQueueSizeInBytes">If remote partner is temporary not available, messages are accumulated in the sending buffer. This value sets the upper threshold of the buffer in bytes.</param>
            <param name="ExternalExceptionHandler">External exception handler can be supplied, will be returned Description from SharmIPC, like class.method name and handeled exception</param>
        </member>
        <member name="M:tiesky.com.SharmIpc.#ctor(System.String,System.Action{System.UInt64,System.Byte[]},System.Int64,System.Int32,System.Action{System.String,System.Exception})">
            <summary>
            SharmIpc constructor
            </summary>
            <param name="uniqueHandlerName">Must be unique in OS scope (can be PID [ID of the process] + other identifications)</param>
            <param name="remoteCallHandler">Callback routine for the remote partner requests. AsyncAnswerOnRemoteCall must be used for answer</param>
            <param name="bufferCapacity">bigger buffer sends larger datablocks faster. Default value is 50000</param>
            <param name="maxQueueSizeInBytes">If remote partner is temporary not available, messages are accumulated in the sending buffer. This value sets the upper threshold of the buffer in bytes.</param>
            <param name="ExternalExceptionHandler">External exception handler can be supplied, will be returned Description from SharmIPC, like class.method name and handeled exception</param>
        </member>
        <member name="M:tiesky.com.SharmIpc.LogException(System.String,System.Exception)">
            <summary>
            Internal exception logger
            </summary>
            <param name="description"></param>
            <param name="ex"></param>
        </member>
        <member name="M:tiesky.com.SharmIpc.AsyncAnswerOnRemoteCall(System.UInt64,System.Tuple{System.Boolean,System.Byte[]})">
            <summary>
            In case if asyncRemoteCallHandler != null
            </summary>
            <param name="msgId"></param>
            <param name="res"></param>
        </member>
        <member name="M:tiesky.com.SharmIpc.InternalDataArrived(tiesky.com.SharmIpcInternals.eMsgType,System.UInt64,System.Byte[])">
            <summary>
            Any incoming data from remote partner is accumulated here
            </summary>
            <param name="msgType"></param>
            <param name="msgId"></param>
            <param name="bt"></param>
        </member>
        <member name="M:tiesky.com.SharmIpc.RemoteRequest(System.Byte[],System.Action{System.Tuple{System.Boolean,System.Byte[]}},System.Int32)">
            <summary>
            
            </summary>
            <param name="args">payload which must be send to remote partner</param>
            <param name="callBack">if specified then response for the request will be returned into callBack (async). Default is sync.</param>
            <param name="timeoutMs">Default 30 sec</param>
            <returns></returns>
        </member>
        <member name="M:tiesky.com.SharmIpc.RemoteRequestWithoutResponse(System.Byte[])">
            <summary>
            Just sends payload to remote partner without awaiting response from it.
            </summary>
            <param name="args">payload</param>
            <returns>if Message was accepted for sending</returns>
        </member>
        <member name="M:tiesky.com.SharmIpc.Dispose">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
